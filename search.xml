<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VMware虚拟机的使用</title>
      <link href="posts/2385/"/>
      <url>posts/2385/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="何为虚拟机"><a href="#何为虚拟机" class="headerlink" title="何为虚拟机"></a>何为虚拟机</h1><p>所谓虚拟机(Virtual Machine)就是计算机，就是一台电脑，只不过是用软件模拟出来的计算机。而VMware就是这么一个软件，使用虚拟化技术模拟出多台计算机。</p><h1 id="用来做什么"><a href="#用来做什么" class="headerlink" title="用来做什么"></a>用来做什么</h1><ol><li> 跑你系统不能跑的软件<br>虚拟机可以安装几乎所有的系统，也就是说你可以装Linx系统，跑Linux上的软件；也可以装几十年前的古董系统，跑马赛克时代的软件。<br>总之跟你操作系统不兼容的软件，在虚拟机里装好相应的系统就能随便跑。</li><li> 跑你系统不敢跑的软件<br>虚拟机提供了一个完全隔离的环境，所以用来测试病毒和神秘的代码是最好的选择。即使虚拟机里出问题了，也不影响你的主机。<br>总之在自己电脑上不敢做的事情，在虚拟机里随便玩。</li></ol><p>就我而言，主要是这两个作用。当然还有应用多开的作用，你可以开多台虚拟机刷你的游戏、网课等。甚至还能用多台虚拟机组网，学习网络知识。</p><h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><p>下面以安装centos7系统为例，介绍VMware软件的使用。</p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>首先是VMware软件的安装，这个网络上资源很多，而且安装也没有什么坑，我这里不在赘述。</p><h2 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h2><p>所谓镜像(Mirroring)，就是操作系统的镜像文件，里面放着打包好的操作系统。我是在<a href="https://developer.aliyun.com/mirror/">阿里云镜像站</a>那里下的centos7系统。</p><blockquote><p>  镜像下载地址：(<a href="https://mirrors.aliyun.com/centos/7/isos/x86_64/">https://mirrors.aliyun.com/centos/7/isos/x86_64/</a>)</p></blockquote><p>.iso结尾的文件就是镜像文件，然后你会发现有四个版本DVD、Everything、Minimal、NetInstall，选哪个呢？版本的具体内容在下面0 README.txt这个文件里有介绍，我这里简单翻译下：</p><p><img src="https://s3.ax1x.com/2020/12/20/rdSr11.png" alt="alt镜像"></p><p>DVD：标准版，集成了不少常用软件，一般都选择这项<br>Everything：完整版，集成了所有软件的安装包<br>Minimal：精简版，只有核心组件，要什么装什么<br>NetInstall：网络安装版，一般不选择这项</p><p>只要选DVD和Minimal这两个版本就好了，我选的是Minimal版的。</p><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><ol><li> 打开VMware，在菜单栏选择[文件(file)]，在下拉菜单里选择[新建虚拟机(New Virtual Machine)]即可创建。(按快捷键<kbd>Ctrl</kbd>+<kbd>n</kbd>也可以)</li><li> 此时会跳出一个新的界面，为了省事，一般选[经典(typical)]这个选项，如下图所示：<br><img src="https://s3.ax1x.com/2020/12/20/rd9Tw8.png" alt="alttypical"></li><li> 接下来选[稍后自己装系统]这个选项，如下图：<br><img src="https://s3.ax1x.com/2020/12/20/rdCXND.png" alt="altlater"></li><li> 然后这一步是在选择将要安装的镜像版本，在下面这个界面中选中[Linux]选项，底下的版本跟我一样选[centos 64-bit]即可。<br><img src="https://s3.ax1x.com/2020/12/20/rdilQA.png" alt="altversion"></li><li> 这一步是在设置虚拟机的名字和存放位置，名字跟我一样填centos7即可，文件的存放位置可以点击右边的[浏览(browse)]修改，只要自己知道放哪了即可。<br><img src="https://s3.ax1x.com/2020/12/20/rdEQtf.png" alt="altlocation"></li><li> 这一步是在设置虚拟机硬盘(我这里称其为虚拟硬盘)的大小和虚拟硬盘文件的存放方式，大小就按建议的20g大小即可，存放方式两者都可以，单个文件存放的话性能好像更好；而分成多个文件存放的话方便虚拟机的拷贝、移动。我一般选分成多个文件。<br><img src="https://s3.ax1x.com/2020/12/20/rdZfSO.png" alt="altdisk"></li><li> 接下来就是虚拟机硬件的配置了，如下图点击[自定义硬件(customize hardware)]选项。<br><img src="https://s3.ax1x.com/2020/12/20/rdnRf0.png" alt="althardware1"></li><li> 下面得根据你电脑的硬件配置来设置你的虚拟机硬件配置了，一般的话分给虚拟机一个cpu和2g内存就可以了，内存少(电脑内存小于4g)的话分给虚拟机1g也够用了。主要是网卡和CD/DVD的配置，网卡配置的话如下图，选[bridged]和[net]选项都可以让虚拟机正常上网。建议跟我一样选[bridged]。<br><img src="https://s3.ax1x.com/2020/12/20/rdKE5R.png" alt="althardware2"><br>CD/DVD的配置关系到之前下载的镜像文件，如下图，在右边[连接(connection)]栏下选择[使用iso镜像文件]选项，然后点击[浏览(browse)]按钮，找到之前下载的系统镜像文件即可。<br><img src="https://s3.ax1x.com/2020/12/21/rwK9OO.png" alt="althardware3"><br>其他的硬件，如声卡、显卡、USB外设等默认配置即可；没用的硬件,如上图的打印机(printer)可以选中它后，点击下面的[移除(remove)]按钮移除；如果硬件不够用的话可以点击[添加(add)]按钮添加。配置完后点击底下的[关闭(close)]按钮即可。</li><li> 回到上一个界面，点击[完成(finish)]按钮即可。<br><img src="https://s3.ax1x.com/2020/12/20/rdnRf0.png" alt="althardware1"></li></ol><h2 id="安装系统镜像"><a href="#安装系统镜像" class="headerlink" title="安装系统镜像"></a>安装系统镜像</h2><p>至此虚拟机(一台模拟出来的电脑)已经配置好了，下面开始装系统了。</p><ol><li> 开机，如下图所示，点击红色下划线标记的选项即可开机。<br><img src="https://s3.ax1x.com/2020/12/20/rd167F.png" alt="altpoweron"></li></ol><blockquote><p>  Tips：按<kbd>Ctrl</kbd>+<kbd>Alt</kbd>可以将鼠标从虚拟机中回到你的电脑。</p></blockquote><ol start="2"><li> 因为系统还没安装到虚拟硬盘上，此时虚拟机是从cd启动的，打开的是安装系统的镜像文件，所以第一次开机是下面的界面，选[install centos7(安装centos7)]选项。<br><img src="https://s3.ax1x.com/2020/12/21/rwQKoQ.png" alt="altinstall centos7"></li><li> 然后就进入centos 7的安装界面了，如下图首先选择语言和键盘，默认英语、美式键盘，下面查找栏里可以搜得到中文。选好后点下一步。<br><img src="https://s3.ax1x.com/2020/12/21/rwQGQ0.md.png" alt="altlanguage"></li><li> 这一步是总的设置，分三大块：地区、软件和系统。其实地区设置和软件安装问题不大，装完系统后还能改，主要是系统里的网络设置，如下图：<br><img src="https://s3.ax1x.com/2020/12/21/rwQQij.png" alt="altsetup"><br>主机名的修改，也就是计算机的名字，很重要。现在就改了，可以跟我一样填centos7。顺便可以把联网按钮打开，测试下网络是不是能正常连接。</li><li> 没问题就到最后一步了，root用户密码的设置和添加用户，如下图：<br><img src="https://s3.ax1x.com/2020/12/21/rwQJyV.md.png" alt="altuser"><br>root密码点进去输入并确认就行了，用户的话建议添加一个，可以给他个管理员权限，一般用这个用户来登录操作就好。<br>接下来就是等系统安装了，安装完后点[重启(reboot)]按钮即可完成安装。</li></ol><h2 id="开机测试"><a href="#开机测试" class="headerlink" title="开机测试"></a>开机测试</h2><p>登录之前创建的用户或root用户，成功登陆后应该是跟下图差不多的界面。<br><img src="https://s3.ax1x.com/2020/12/21/rw3gmV.png" alt="altstart"></p><blockquote><p>  Tips：每一行开头的格式是[登陆的用户名@主机名 当前路径]。</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>至此，一个虚拟机的创建和系统的安装就介绍完了。虚拟机的创建基本上就是我介绍的这个思路和步骤，系统的安装或许不同系统有不同的安装界面，但是要设置的地方几乎也都差不多。</p>]]></content>
      
      
      <categories>
          
          <category> 实用教程(方法层面) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用阿里云ECS搭建Minecraft服务器</title>
      <link href="posts/42242/"/>
      <url>posts/42242/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>虽然写的是阿里云ECS<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Elastic Compute Service(弹性计算服务)，其实就是一台24小时开机，能上网的电脑">[1]</span></a></sup>，但是腾讯云还有其他云服务商的ECS也是可以的。用ECS搭建Minecraft(我的世界，简称MC，一款游戏)服务器无疑是最具性价比的操作，下面是搭建过程(对小白友好)，长文警告。</p><h1 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ol><li> 一台能上网的电脑(下面会用‘PC端’引用它)</li><li> 一台内存至少2G的ECS(下面会用‘服务端’引用它)，可以到云服务商那直接购买(较贵)，也可以选择下面的获取途径:</li></ol><blockquote><ol><li> 要求：阿里云新人<a href="https://free.aliyun.com/?spm=5176.12482766.J_9220772140.52.60404c27E6WBQm">(传送门)</a>  可以免费领一个，试用一个月</li><li>要求：学生，年龄24岁以下<a href="https://developer.aliyun.com/adc/student/?spm=a2c6h.20842984.J_3574106040.1.7e3630998Tmeor">(传送门)</a>可以免费领两个月2核4G的服务器，但是得看运气，领完就没了。到期有测验过了还能免费续4个月，总共6个月，挺好的一个福利</li><li> 要求：同上<a href="https://developer.aliyun.com/plan/promotion/1?spm=a2c6h.13788107.1364563.d100010001.755150a3HNFywi&utm_content=g_1000199894">(传送门)</a>选择学生专享那款，9.5元每月挺实惠的</li><li> 万能的淘宝，不多介绍</li></ol></blockquote><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>PC端用的是win10操作系统，服务端选的是centos8.0操作系统。其他操作系统也是一个原理，下载对应版本的软件即可。除了服务端的JDK1.8.0和screen，其他的软件都先下载到PC端上。</p><h3 id="PC端"><a href="#PC端" class="headerlink" title="PC端"></a>PC端</h3><ol><li> FileZilla，一款免费提供FTP解决方案的软件，靠它把文件传到服务端。<a href="https://filezilla-project.org/download.php?type=client">官网下载地址</a>，下完直接打开，默认安装即可。</li><li> PuTTY，一款Windows和Unix平台的SSH和Telnet免费实现的软件，靠它操作服务端。<br><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">官网下载地址</a>，下完安装。</li><li> JRE1.8.0<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Java SE Runtime Environment 8，简称JRE8，Java的运行环境。MC是用Java写的，所以得靠它运行MC，它起的是翻译代码的作用。">[2]</span></a></sup>，用来测试MC，没有它跑不了游戏。<a href="https://www.oracle.com/java/technologies/javase-jre8-downloads.html">官网下载地址</a>，下完安装。</li><li> MC客户端，图方便你可以选择跟我一样的客户端。<a href="https://pan.baidu.com/s/1JSC-R9Yvby5UzCo6cCltng">百度网盘地址</a> 提取码：om9q</li></ol><p>如果你不喜欢这个花里胡哨的，也可以去mcbbs(我的世界论坛)服务端板块去找其他的整合包(带客户端的就行),我也是这里找的。</p><blockquote><p>附上原帖地址：<a href="https://www.mcbbs.net/thread-1062266-1-1.html">https://www.mcbbs.net/thread-1062266-1-1.html</a></p></blockquote><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><ol><li>JDK1.8.0<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Java Development Kit，是用来开发Java的工具包，这里是给MC提供运行环境。">[3]</span></a></sup>，作用同PC端的JRE1.8.0。</li><li> screen，linux系统上必装神器。</li><li> MC服务端。<a href="https://pan.baidu.com/s/1xErKNifOqynrSZL_-cYdWw">百度网盘地址</a> 提取码：ycnj</li></ol><h1 id="部署阶段"><a href="#部署阶段" class="headerlink" title="部署阶段"></a>部署阶段</h1><p>到这一步时确定MC客户端和服务端都已经都下载了，并且FileZilla，PuTTY，JRE1.8.0已安装在你的PC上。服务端也已经安装好系统。</p><h2 id="PC端的操作"><a href="#PC端的操作" class="headerlink" title="PC端的操作"></a>PC端的操作</h2><ol><li> 首先，把MC服务端和客户端解压到一个文件夹，位置随意(只要自己找的到就行)。</li><li> 打开FileZilla软件，按下图填写内容，填完后点击快速连接即可。</li></ol><p><img src="https://s3.ax1x.com/2020/12/10/risqaQ.png" alt="altFileZilla的使用">注：公网ip在阿里云官网进入云服务器ECS控制台就能看到，如下图所示：<br><img src="https://s3.ax1x.com/2020/12/10/risbVg.png" alt="alt查看公网ip">还有不知道root密码的话按下图操作重置密码即可：<br><img src="https://s3.ax1x.com/2020/12/10/riyprT.png" alt="alt重置实例密码"></p><ol start="3"><li> 连接到服务器后，把服务端的解压文件拷贝到服务器上。这是FileZilla软件的基操，如下图所示：</li></ol><p><img src="https://s3.ax1x.com/2020/12/10/risL5j.png" alt="altfilezilla的简单操作"><br>4.  接下来打开Putty软件，连接服务器，按下图操作：</p><p><img src="https://s3.ax1x.com/2020/12/10/risv2q.png" alt="altPutty的使用"></p><ol start="5"><li> 第一次连接会有对话框提示选接受，然后输入你的用户名回车，会提示你输密码，输入密码回车，就进入服务器后台了。没问题的话应该是下图这个样子。</li></ol><p><img src="https://s3.ax1x.com/2020/12/10/risjGn.png" alt="altputty登陆界面"></p><h2 id="服务端的操作"><a href="#服务端的操作" class="headerlink" title="服务端的操作"></a>服务端的操作</h2><ol><li> JDK1.8.0的安装，安装前可以用下面的命令测试下系统有没有安装java，有的话就不用重复安装了。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>安装过的会显示如下信息：<br><img src="https://s3.ax1x.com/2020/12/10/ris7qS.png" alt="altJava版本信息">没安装的话，输入下面的命令安装。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk* -y</span><br></pre></td></tr></table></figure></li><li> screen的安装及使用，先输入下面的命令安装screen<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install screen -y</span><br></pre></td></tr></table></figure>然后输入下面的命令创建一个名叫mc的会话<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -S mc</span><br></pre></td></tr></table></figure></li><li> 接下来都是在这个会话窗口操作，cd命令进入游戏文件夹，vim命令查看修改server.properties(MC服务器配置文件)。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/mc</span><br><span class="line">vim server.propertiesimages</span><br></pre></td></tr></table></figure></li><li> 接下来进入的是vim编辑界面，这里不要乱按键。按我下面写的一步步走。<br>先输入<kbd>i</kbd>进入插入模式，编辑界面的左下角应该是跟我一样的，如下图：<br><img src="https://s3.ax1x.com/2020/12/10/riy9qU.png" alt="altvim操作">然后就可以编辑配置文件了，主要注意下面这几个参数：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">difficulty=hard   <span class="comment">#这个参数设置游戏难度，hard是困难，可以改成normal普通</span></span><br><span class="line">gamemode=survival <span class="comment">#设置游戏模式，survival是生存模式</span></span><br><span class="line">max-players=20    <span class="comment">#这里设置最大玩家数量，默认20个玩家</span></span><br><span class="line">online-mode=<span class="literal">false</span> <span class="comment">#这个参数一定要改成false否则玩家加不进来</span></span><br><span class="line">server-port=25565 <span class="comment">#游戏端口，这个得记住</span></span><br></pre></td></tr></table></figure></li><li> 修改完按<kbd>ECS</kbd>，再按<kbd>shift</kbd>+<kbd>；</kbd>，最后输入<kbd>wq</kbd>保存并退出。</li><li> iptables命令开启25565端口(上面配置文件里的游戏端口)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 25565 -j ACCEPT  <span class="comment">#--dport后面可以改端口</span></span><br></pre></td></tr></table></figure></li><li> 配置安全组规则<br>重新打开阿里云的ECS控制台，选择对应的实例，选中安全组，添加一条如下的规则：<br><img src="https://s3.ax1x.com/2020/12/10/riySMV.png" alt="alt安全组规则配置"></li><li> 启动游戏</li></ol><ul><li>方式一，4G的服务器可以把下面命令里的Xmx2000M改成Xmx4000M，命令如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Xmx2000M -Xms1024M -jar forge.jar nogui</span><br></pre></td></tr></table></figure></li><li>方式二，先用chmod命令修改文件权限，让start.sh文件可以执行，<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 start.sh</span><br></pre></td></tr></table></figure>以后只要执行这个命令就能启动MC服务器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./start.sh </span><br></pre></td></tr></table></figure></li></ul><ol start="9"><li> 游戏启动时会一直弹东西不用慌，过个2分钟不到就差不多了。输入/help跳出一连串的命令就说明服务器成功启动了，类似我的结果：<br><img src="https://s3.ax1x.com/2020/12/10/risTr8.png" alt="altMC成功启动"><br>然后按<kbd>ctrl</kbd>+<kbd>A</kbd>+<kbd>D</kbd>可以剥离会话。放心MC服务端不会停，它会一直在mc这个会话窗口里运行。<br>想重新进入会话的话，输入下面命令即可<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -x mc  <span class="comment">#-x 后面跟会话名</span></span><br></pre></td></tr></table></figure>忘记会话名的话可以用下面的命令查看<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -ls</span><br></pre></td></tr></table></figure></li><li>screen的用法就这些。退出会话后，接着直接关掉putty窗口就行了，服务端已经部署完了。</li></ol><h1 id="测试阶段"><a href="#测试阶段" class="headerlink" title="测试阶段"></a>测试阶段</h1><p>回到你的PC机，打开游戏客户端的解压文件，双击HMCL-3.3.172.exe文件，游戏就打开了。HCML是一款MC的启动器，用法不多介绍了。<br>创建一个用户直接开始游戏。<br>选择多人游戏，在下面点击添加服务器，把你的服务器公网ip填到服务器地址那栏，服务器名称随意。填完点完成。成功的话应该能看到下图：</p><p><img src="https://s3.ax1x.com/2020/12/10/risXPs.png" alt="altMC运行"><br>点击加入服务器开始畅玩吧！游戏截图：</p><p><img src="https://s3.ax1x.com/2020/12/10/risxx0.png" alt="alt开服截图"></p><p>如果有什么问题的话可以在文章下面评论留言，也可以点击下面的联系方式发邮件给我。</p><h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Elastic Compute Service(弹性计算服务)，其实就是一台24小时开机，能上网的电脑<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Java SE Runtime Environment 8，简称JRE8，Java的运行环境。MC是用Java写的，所以得靠它运行MC，它起的是翻译代码的作用。<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Java Development Kit，是用来开发Java的工具包，这里是给MC提供运行环境。<a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> 实用教程(方法层面) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识汉诺塔-递归算法</title>
      <link href="posts/23369/"/>
      <url>posts/23369/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>无论学哪个编程语言，只要学到函数时都会介绍这个递归算法，用于解决类似汉诺塔问题。</p><p>汉诺塔问题，它本身不是很复杂，但是它复杂在<strong>问题嵌套问题</strong>。具体表现为要实现最终目标先得完成前一个小目标，而前一个小目标又依赖于前前一个小目标的实现，就这样……，最终源头会有一个小小小目标。不过每个目标的实现做法是一样的，这就使得<strong>函数嵌套函数</strong>的思想出现了。</p><p>用‘函数嵌套函数’的方法解决‘问题嵌套问题’的问题，这样问题就变得简单了，但是要看出问题具有嵌套特点并不是那么容易的，我们下面就以汉诺塔问题本身为例介绍下解题思路</p><h1 id="问题的出现"><a href="#问题的出现" class="headerlink" title="问题的出现"></a>问题的出现</h1><p>如下所示，所谓汉诺塔问题就是把塔A上的盘子借助塔B移到塔C上去。<br><img src="https://s3.ax1x.com/2020/12/10/ri3yB6.png" alt="alt 汉诺塔问题"><br>但是移动过程中有以下要求：</p><ol><li> 只能移动最上面的盘子</li><li> 每次只能移动一个盘子</li><li> 大盘子要在小盘子下面</li></ol><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>在看下面的解题过程前，不妨先自己尝试一下，三个盘子的移动过程。</p><p>为了便于发现移动规律，我把三个盘子和四个盘子的处理过程放在一起了，如下图所示：</p><p><img src="https://s3.ax1x.com/2020/12/10/ri3gAO.png" alt="alt汉诺塔过程比较"><br>左边为三个盘子的处理过程，右边为四个盘子的处理过程，根据上图我们可以发现如下规律：</p><ol><li> 整个过程所需总步数为2<sup>n</sup>-1，n为盘子数</li><li> n&gt;1时，整个移动过程关于第2<sup>n-1</sup>步对称，也就是被中间蓝色填充标记的移动过程分成上下两部分</li><li> 上下两部分又关于红色下划线标记的移动过程对称，这对称的两部分又关于绿色圆圈标记的移动过程对称</li></ol><p>有了以上规律，对于处理n个盘子的过程就都可以用下图的方式来处理：</p><p>先把n-1个盘子移动到塔B，再把n号盘子移动到塔C，最后把n-1个盘子移动到塔C。</p><p><img src="https://s3.ax1x.com/2020/12/10/ri3out.png" alt="altn个盘子处理过程"></p><p>而把(n-1)号盘子移动到塔B过程同理，……直到第1号盘子从源地址塔到目标塔即可</p><p>这里蕴含了递归算法的两个重要部分，递归条件和出口条件。递归条件用于嵌套调用函数本身，出口条件用于退出循环。</p><h1 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h1><p>根据以上总结的规律，下面来设计下程序(基于c语言)。</p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p><img src="https://s3.ax1x.com/2020/12/10/ri3snx.png" alt="alt汉诺塔流程图"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://c.runoob.com/compile/11">c在线工具</a>可在线编译运行以下代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//n盘子数，source源地址塔，middle辅助塔，destination目标塔</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> source,<span class="keyword">char</span> middle,<span class="keyword">char</span> destination)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">4</span>;  <span class="comment">//设置盘子数量</span></span><br><span class="line">    <span class="comment">//去掉注释，可支持交互输入盘子数量</span></span><br><span class="line">    <span class="comment">//printf(&quot;How many disks:&quot;);</span></span><br><span class="line">    <span class="comment">//scanf(&quot;%d&quot;,&amp;n);</span></span><br><span class="line">    hanoi(n,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>); <span class="comment">//设置移动方向</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> source,<span class="keyword">char</span> middle,<span class="keyword">char</span> destination)</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> i=<span class="number">1</span>; <span class="comment">//存放移动步数</span></span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;STEP %d :Move disk %d from %c to %c\n&quot;</span>,i,n,source,destination);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    hanoi(n<span class="number">-1</span>,source,destination,middle);i++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;STEP %d :Move disk %d from %c to %c\n&quot;</span>,i++,n,source,destination);</span><br><span class="line">    hanoi(n<span class="number">-1</span>,middle,source,destination);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>因为在移动第n个盘子的时候需要先完成第n-1个盘子的移动才跳转回当前处理第n个盘子的函数，这样n个盘子就需要存储n-1个变量，所以递归挺花空间的。</p><p>而且随着盘子的增加，总步数是随盘子数的指数极增长的，所以递归还费时间。这个可以把我上面程序中的盘子数设置为20就能体验到了。</p><p>你看这是我放<a href="https://c.runoob.com/compile/11">c在线工具</a>运行的结果，直接就把它跑懵了，第29435步都没打出来。所以能不递归尽量别用递归，尤其递归次数很多的问题。</p><blockquote><p>STEP 29434 :Move disk 2 from B to A<br>S<br>run: line 1:     3 File size limit exceeded(core dumped) ./a.out<br>Exited with error status 153</p></blockquote><p>还有关于它数据结构的特点类似于栈-先进后出。最底下的盘子是最先放上去的，但是它只有上面的盘子都移走才能出来。</p><p>其实递归函数的调用就是如此，先把处理n号盘的函数入口地址压入栈中，再把处理(n-1)号盘的函数入口地址压入栈中，……最后处理完1号盘再依次返回栈中的函数。简单了解即可。</p>]]></content>
      
      
      <categories>
          
          <category> 基础原理(认识层面) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于两负数相乘为正数的解答</title>
      <link href="posts/63133/"/>
      <url>posts/63133/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="问题提出"><a href="#问题提出" class="headerlink" title="问题提出"></a>问题提出</h1><p>为什么两个负数相乘结果是正的？大多数数学老师只会让你记住这个结论就好，但其实它是可以通过推论来得出的。我下面介绍下两种推论方法</p><h1 id="推论一"><a href="#推论一" class="headerlink" title="推论一"></a>推论一</h1><p>第一种推论方式建立在以下假设的基础上</p><ol><li> 0乘以任何数都等于零</li><li> 乘法分配律</li></ol><p>那现在我们就可以来论证(-4) * (-3) = 12是否成立了，下面是推论过程</p><ol><li> 因为 0 * (-3) = 0</li><li> 那么 (-4 + 4) * (-3) = 0 也是成立的</li><li> 根据分配律，有 (-4) * (-3) + (-3) * 4 = 0</li><li> 而 4 * (-3) = -12</li><li> 所以 (-4) * (-3) = 12</li></ol><h1 id="推论二"><a href="#推论二" class="headerlink" title="推论二"></a>推论二</h1><p>第二种推论的假设基础如下</p><ol><li> (-1)乘以任何数相当于对该数取反</li><li> 乘法结合律</li></ol><p>还是同一个例子我们来论证下：</p><ol><li> 因为 (-4) * (-3) = [ (-1) * 4 ] * (-3)</li><li> 根据结合律，有 [ (-1) * 4 ] * (-3) = (-1) * [ 4 * (-3) ] </li><li> 所以 (-4) * (-3) = (-1) * [ 4 * (-3) ]</li><li> 而 (-1) * [ 4 * (-3) ] = -(-12)</li><li> -(-12)相当于对(-12)取反，所以 (-4) * (-3) = 12</li></ol><p>这个推论有循环论证的弊端，因为 -(-12) 也可以是 (-1) * (-12)，这又回到了要论证的观点本身。这也是为什么在推论前先引入第一条假设的原因。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>所以负负得正这个概念完全是为了让负数也适用乘法分配律结合律等规律才有的约定，数学并不完美，数学有的是漏洞，而负负得正就是为弥补某些漏洞出现的一种解释而已。</p><p>借此文更多是想告诉大家，所有理论观点本身就是人定义出来的，所以这些观点理论虽然可以解释不少现象但是无法避免漏洞的存在。而科学的批判精神可以帮助我们找出漏洞修补漏洞，这种精神是进步的源泉，每个人都应该具备。最后分享苏格拉底的一句话。</p><blockquote><p>我一无所知。一棵树连自己都不知道自己是树，人们就去肯定“这是一棵树”；盐连自己都不知道自己是咸的，人们就去肯定“盐是咸的”这不是很可笑的事情吗？所有的知识都是错的，所有的感觉都是错觉。人可以做梦，但梦是错的，你是否愿意醒来？ ​​​​</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础原理(认识层面) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三个基础排序算法的c语言实现</title>
      <link href="posts/20527/"/>
      <url>posts/20527/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>以下要介绍的三个算法分别是冒泡(及改进冒泡)、选择和插入排序算法，处理的对象（数据结构）是一个一维数组。</p><p>把这三个算法放一块讲是因为他们简单，时间复杂度<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="算法的时间复杂度是一个函数，它定性描述该算法的运行时间。常用大O符号表述，O意思是忽略重要项以外的内容。如O(n<sup>2</sup>)就是算法运行时间最常也就是n<sup>2</sup>的常数倍。另一种理解就是它指出了算法有多快，体现算法运行时间的增速。">[1]</span></a></sup>都为O(n<sup>2</sup>)，空间复杂度<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="空间复杂度是算法在运行过程中临时占用存储空间大小的量度。如本文的三种排序都只用了一个临时变量temp,所以空间复杂度是O(1) 。">[2]</span></a></sup>都为O(1)。</p><p>完整代码<a href="./#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81">点击此处</a>查看，电脑上没安装编译环境的朋友可以把代码放到<a href="https://c.runoob.com/compile/11">在线c编译器</a>运行查看结果</p><h1 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h1><p>原始数组：34,72,39,86,22,83,76,18,81,50</p><h2 id="动静图展示"><a href="#动静图展示" class="headerlink" title="动静图展示"></a>动静图展示</h2><p>动图如下，两个箭头指向正在比较的黄色块<br>黄色块：正在比较的块<br>蓝色块：发生位置交换的块<br>绿色块：已排序完的块</p><p><img src="https://s3.ax1x.com/2020/12/10/ri34gA.gif" alt="alt 动态冒泡排序"></p><p>静图，运行完整代码，去掉对应注释即可看到下图结果：</p><p><img src="https://s3.ax1x.com/2020/12/10/ri36HK.png" alt="alt 静态冒泡排序"></p><h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bubble_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;  <span class="comment">//临时存储变量，用于交换数组值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;   <span class="comment">//从0到n-1遍历，每次排好一个数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n-i<span class="number">-1</span>;j++)&#123;   <span class="comment">//遍历剩下待排序的数</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[j+<span class="number">1</span>]&lt;<span class="built_in">array</span>[j])&#123;   <span class="comment">//两两比较，大的数往后冒</span></span><br><span class="line">                temp=<span class="built_in">array</span>[j+<span class="number">1</span>];</span><br><span class="line">                <span class="built_in">array</span>[j+<span class="number">1</span>]=<span class="built_in">array</span>[j];</span><br><span class="line">                <span class="built_in">array</span>[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="改进冒泡排序"><a href="#改进冒泡排序" class="headerlink" title="改进冒泡排序"></a>改进冒泡排序</h1><h2 id="问题的发现"><a href="#问题的发现" class="headerlink" title="问题的发现"></a>问题的发现</h2><p>不妨考虑有如下的数组：</p><p>1，2，5，6，8，15，26，30，44，58</p><p>很明显它是已经排好序的，但是用上面冒泡排序的话会比较n*(n-1)/2次才停下来，但其实一次遍历没有发生位置改变，我们就能得出排序完成的结论。</p><h2 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h2><p>在每次遍历(第二个for循环)前设置一个flag为1代表已排序，然后在遍历比较中发生位置交换就把flag置为0，最后在回到第一个for循环前判断是否排序完来退出排序即可。</p><h2 id="动静图展示-1"><a href="#动静图展示-1" class="headerlink" title="动静图展示"></a>动静图展示</h2><p>演示数组还是原数组，动图如下：</p><p><img src="https://s3.ax1x.com/2020/12/10/ri3h3d.gif" alt="alt 动态改进冒泡排序"></p><p>很明显跟之前比少了最后几步，静图更明显</p><p><img src="https://s3.ax1x.com/2020/12/10/ri32ND.png" alt="alt 静态改进冒泡排序"></p><h2 id="核心代码-1"><a href="#核心代码-1" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ImprovedBubble_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">_Bool</span> sorted=<span class="number">1</span>;     <span class="comment">//已排序标志位</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n-i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[j+<span class="number">1</span>]&lt;<span class="built_in">array</span>[j])&#123;</span><br><span class="line">                temp=<span class="built_in">array</span>[j+<span class="number">1</span>];</span><br><span class="line">                <span class="built_in">array</span>[j+<span class="number">1</span>]=<span class="built_in">array</span>[j];</span><br><span class="line">                <span class="built_in">array</span>[j]=temp;</span><br><span class="line">                sorted=<span class="number">0</span>;   <span class="comment">//发生位置交换标志位置0</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sorted)      <span class="comment">//已排序完就退出循环</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h1><p>原始数组：21,9,41,44,33,60,51,10,66,75</p><h2 id="动静图展示-2"><a href="#动静图展示-2" class="headerlink" title="动静图展示"></a>动静图展示</h2><p>动图如下，红色块是遍历过程中当前数最大的块</p><p><img src="https://s3.ax1x.com/2020/12/10/ri3TDP.gif" alt="alt 动态选择排序"></p><p>静图如下：</p><p><img src="https://s3.ax1x.com/2020/12/10/ri35jI.png" alt="alt 静态选择排序"></p><h2 id="核心代码-2"><a href="#核心代码-2" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Selection_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp,index;  <span class="comment">//index存放每轮遍历待找出的最小值的下标</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        index=i;    <span class="comment">//每次遍历先初始化最小值下标</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[index]&gt;<span class="built_in">array</span>[j])&#123;  <span class="comment">//找到比当前最小值还小的数</span></span><br><span class="line">                index=j;    <span class="comment">//更新最小值下标</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(index!=i)&#123;   <span class="comment">//最小值下标改变，就交换两数</span></span><br><span class="line">            temp=<span class="built_in">array</span>[i];</span><br><span class="line">            <span class="built_in">array</span>[i]=<span class="built_in">array</span>[index];</span><br><span class="line">            <span class="built_in">array</span>[index]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h1><p>原始数组：26,9,41,44,33,60,51,10,66,75</p><h2 id="动静图展示-3"><a href="#动静图展示-3" class="headerlink" title="动静图展示"></a>动静图展示</h2><p>它的排序过程看上去不容易理解。我解释下，其实它默认第一个值是排好序的，所以它是从第二个数开始遍历的。<br>遍历过程是先把箭头指向的值放到一个临时存储区中，然后从它的左边出发依次比较，当它找到比它小的数的时候(它的位置定了)它就停下了。然后把比它大的数依次往后挪一位给它腾出个位置，最后把他从临时存储区中放到对应的位置。<br>重复上述遍历，左边排好序的数慢慢变多，右边待排序的数减少到没有，排序结束<br>动图如下，</p><p><img src="https://s3.ax1x.com/2020/12/10/ri3f9H.gif" alt="alt 动态插入排序"></p><p>静图如下：</p><p><img src="https://s3.ax1x.com/2020/12/10/ri3R4e.png" alt="alt 静态插入排序"></p><h2 id="核心代码-3"><a href="#核心代码-3" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insertion_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;   <span class="comment">//从第二个数开始排序</span></span><br><span class="line">        j=i<span class="number">-1</span>;  </span><br><span class="line">        <span class="comment">//如果待排序数比它左边的数小就会位置交换，否则就是已排好序</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">array</span>[j]&gt;<span class="built_in">array</span>[i])&#123;  </span><br><span class="line">            temp=<span class="built_in">array</span>[i];  <span class="comment">//先把待排序数存到临时变量temp中保护起来</span></span><br><span class="line">            <span class="keyword">while</span>(j&gt;=<span class="number">0</span>&amp;&amp;<span class="built_in">array</span>[j]&gt;temp)&#123; <span class="comment">//寻找待排序数的位置，</span></span><br><span class="line">                <span class="built_in">array</span>[j+<span class="number">1</span>]=<span class="built_in">array</span>[j];  <span class="comment">//并把比它大的数往后挪一位  </span></span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">array</span>[j+<span class="number">1</span>]=temp;    <span class="comment">//最后把待排序数放到对应位置上</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p>使用说明看注释</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 10  <span class="comment">//设置待排序数据的个数</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> <span class="built_in">array</span>[])</span></span>;    <span class="comment">//打印数组函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bubble_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ImprovedBubble_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Selection_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insertion_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//初始化数组并打印原始数据</span></span><br><span class="line">    <span class="keyword">int</span> arr[MAX_NUM]=&#123;<span class="number">56</span>,<span class="number">34</span>,<span class="number">60</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">47</span>,<span class="number">99</span>,<span class="number">44</span>,<span class="number">10</span>,<span class="number">25</span>&#125;; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Origin arrays:\n&quot;</span>);</span><br><span class="line">    Print_array(arr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//去掉注释，选择对应的排序函数及打印过程</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nBuble sort process:\n&quot;</span>);</span><br><span class="line">    Bubble_sort(arr,MAX_NUM);</span><br><span class="line"><span class="comment">//    printf(&quot;\nImprovedBuble sort process:\n&quot;);</span></span><br><span class="line"><span class="comment">//    ImprovedBubble_sort(arr,MAX_NUM);</span></span><br><span class="line"><span class="comment">//    printf(&quot;\nSelection sort process:\n&quot;);</span></span><br><span class="line"><span class="comment">//    Selection_sort(arr,MAX_NUM);</span></span><br><span class="line"><span class="comment">//    printf(&quot;\nInsertion sort process:\n&quot;);</span></span><br><span class="line"><span class="comment">//    Insertion_sort(arr,MAX_NUM);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印排序结果</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nArrays sorted(By ascending):\n&quot;</span>);</span><br><span class="line">    Print_array(arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nBye!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bubble_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;   </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n-i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[j+<span class="number">1</span>]&lt;<span class="built_in">array</span>[j])&#123;</span><br><span class="line">                temp=<span class="built_in">array</span>[j+<span class="number">1</span>];</span><br><span class="line">                <span class="built_in">array</span>[j+<span class="number">1</span>]=<span class="built_in">array</span>[j];</span><br><span class="line">                <span class="built_in">array</span>[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Step %2d :&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">        Print_array(<span class="built_in">array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ImprovedBubble_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">_Bool</span> sorted=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n-i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[j+<span class="number">1</span>]&lt;<span class="built_in">array</span>[j])&#123;</span><br><span class="line">                temp=<span class="built_in">array</span>[j+<span class="number">1</span>];</span><br><span class="line">                <span class="built_in">array</span>[j+<span class="number">1</span>]=<span class="built_in">array</span>[j];</span><br><span class="line">                <span class="built_in">array</span>[j]=temp;</span><br><span class="line">                sorted=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sorted)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Step %2d :&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">        Print_array(<span class="built_in">array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Selection_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp,index;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        index=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[index]&gt;<span class="built_in">array</span>[j])&#123;</span><br><span class="line">                index=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(index!=i)&#123;</span><br><span class="line">            temp=<span class="built_in">array</span>[i];</span><br><span class="line">            <span class="built_in">array</span>[i]=<span class="built_in">array</span>[index];</span><br><span class="line">            <span class="built_in">array</span>[index]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Step %2d :&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">        Print_array(<span class="built_in">array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insertion_sort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        j=i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">array</span>[j]&gt;<span class="built_in">array</span>[i])&#123;</span><br><span class="line">            temp=<span class="built_in">array</span>[i];</span><br><span class="line">            <span class="keyword">while</span>(j&gt;=<span class="number">0</span>&amp;&amp;<span class="built_in">array</span>[j]&gt;temp)&#123;</span><br><span class="line">                <span class="built_in">array</span>[j+<span class="number">1</span>]=<span class="built_in">array</span>[j];</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">array</span>[j+<span class="number">1</span>]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Step %2d :&quot;</span>,i);</span><br><span class="line">        Print_array(<span class="built_in">array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> <span class="built_in">array</span>[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAX_NUM;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>,<span class="built_in">array</span>[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">算法的时间复杂度是一个函数，它定性描述该算法的运行时间。常用大O符号表述，O意思是忽略重要项以外的内容。如O(n<sup>2</sup>)就是算法运行时间最常也就是n<sup>2</sup>的常数倍。另一种理解就是它指出了算法有多快，体现算法运行时间的增速。<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">空间复杂度是算法在运行过程中临时占用存储空间大小的量度。如本文的三种排序都只用了一个临时变量temp,所以空间复杂度是O(1) 。<a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> 基础原理(认识层面) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈投资理财</title>
      <link href="posts/32388/"/>
      <url>posts/32388/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>不知道大家是否注意到，其实投资这个行为涉及到两类人，一类是出资人，另一类是用钱人。而我们日常所说的投资只是从出资人的角度来讲的，正是这种单方面的理解导致了不少人盲目投资的行为。</p><p>所以在本文我会比较全面的帮助大家看清投资本质，并建立起一个较为完整的方法论(交易框架)来指导大家理性投资。</p><h1 id="投资前准备"><a href="#投资前准备" class="headerlink" title="投资前准备"></a>投资前准备</h1><p>当你有了闲钱准备投资理财的时候，你会发现你的资本还没变多，但是你的骚扰电话变多了，大多还是证券公司、股票投资的骚扰电话。</p><p>所以首先，投资前先做好个人信息的保护工作，在无论哪个平台开通投资账户时尽量不要留自己常用的电话；</p><p>其次是提高自己的防诈骗能力，没有确信的平台保证，不要给别人直接转钱。始终要有保护好自己的本金的意识；</p><p>最后是学习能力和专注力的配合了，这是成为一个优秀的交易者必不可少的条件。</p><h1 id="投资本质"><a href="#投资本质" class="headerlink" title="投资本质"></a>投资本质</h1><p>用钱人需要资金，此时投资就有了需求。而为了得到资金就要通过各种渠道去找出资人。找到可以借钱的人了呢，这时就该考虑如何商量借钱的事了。<br>这个商量就很重要了，它明确了拿钱去干什么（投资方向），什么时候还钱（投资周期），怎么还钱（分红方式），还多少钱（收益大小），有无凭证担保人（风险保障）等。<br>商量完了，出资人把钱给用钱人了，投资的前期流程就走完了。最后就是等投资结果了。<br>以上就是我对投资本质的理解，简而言之，<strong>两个对象一份物质上的契约</strong>。这个契约架起了两者的关系，没有这个契约，也就没有投资一说。所以这个契约就极其重要。</p><p>理解了投资本质（认识论已经建立），那下面就介绍下一般怎么去做（方法论的建立），也即交易框架的建立。</p><h1 id="投资要点"><a href="#投资要点" class="headerlink" title="投资要点"></a>投资要点</h1><h2 id="一、明确自己的能力（重点认识阶段）"><a href="#一、明确自己的能力（重点认识阶段）" class="headerlink" title="一、明确自己的能力（重点认识阶段）"></a>一、明确自己的能力（重点认识阶段）</h2><p>这一步是在认识自己，有多少资金实力，有多少投资经验，承担风险的能力。这一步不做过多介绍，因为但凡你要买个理财产品，人家平台都会给你做测试的，你只要认真做就行了。不认真也行，因为有些内容涉及隐私（如月收入，家庭收入等），但是关键是认识自己。</p><h2 id="二、合理选择投资方向（初步决策阶段）"><a href="#二、合理选择投资方向（初步决策阶段）" class="headerlink" title="二、合理选择投资方向（初步决策阶段）"></a>二、合理选择投资方向（初步决策阶段）</h2><p>这一步是根据自己的能力来选择合适的理财产品，一般对理财产品来说，收益跟风险成正比的，收益越高风险越高。为方便大家认识到底有哪些方向可供选择，以下是我对理财产品主要按风险从低到高的排序（升级路线）：</p><table><thead><tr><th align="center">排名</th><th align="center">理财产品</th><th align="center">收益</th><th align="center">风险</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">保险</td><td align="center">理想情况下，一般为负</td><td align="center">极小，但是有不确定因素</td></tr><tr><td align="center">2</td><td align="center">银行存款</td><td align="center">可忽略</td><td align="center">很小</td></tr><tr><td align="center">3</td><td align="center">债券</td><td align="center">勉强看得见，偶尔会负</td><td align="center">小</td></tr><tr><td align="center">4</td><td align="center">股票</td><td align="center">大亏到大赚之间波动</td><td align="center">从小到大波动</td></tr><tr><td align="center">5</td><td align="center">黄金、期货、外汇</td><td align="center">按乘除法计算</td><td align="center">按乘法计算</td></tr><tr><td align="center">6</td><td align="center">区块链</td><td align="center">无穷小到无穷大之间波动</td><td align="center">无穷小到无穷大之间波动</td></tr></tbody></table><p>注：基金因其血统不够纯正的原因，烦请各位自行与上表格内容进行比对选择。</p><h2 id="三、明确投资内容（重点思考阶段）"><a href="#三、明确投资内容（重点思考阶段）" class="headerlink" title="三、明确投资内容（重点思考阶段）"></a>三、明确投资内容（重点思考阶段）</h2><p>这一步是对自己选择的产品进行分析决策的步骤，主要有以下几个重要了解方面：</p><ol><li> 交易规则<br>交易的平台渠道（在哪交易），交易时间段（何时可以交易），是否有锁定期、当天买进何时可以卖出（T+0还是T+1），各种手续费多少。</li><li> 投资对象<br>谁拿了钱，那个谁（个人或企业或国家）就是你日后重点关注的对象了，它直接决定了收益是正还是负。这时就要对它分析了，以企业为例。企业的核心业务是什么（做什么）？它的现状如何未来前景又是如何(时间线角度思考)?它的内部管理层如何（内部）？它跟合作企业的关系如何（外部）？<br>分析角度有很多，我这里不做过多赘述。你只要明确的是，你对它正确的认识越多，你对最后的收益就越有把握。</li><li> 回报形式<br>回报以何种形式发放，到期直接跟本金一起给还是以分红形式分期发，分红又是如何分（分现金红利还是股票）；</li><li> 其他事项<br>信息披露方式（正确信息的获取渠道）、是否有保障，会不会有本金亏光还欠钱的情况。</li></ol><h2 id="四、良好的交易状态（最终决策阶段）"><a href="#四、良好的交易状态（最终决策阶段）" class="headerlink" title="四、良好的交易状态（最终决策阶段）"></a>四、良好的交易状态（最终决策阶段）</h2><p>到了最后决策操作阶段，这一步神志不清，往往会把上面辛辛苦苦认清自己、认认真真搜集信息分析信息的努力付之东流。为此应做到以下几点：</p><ol><li> 保证在精神状态良好的情况下决策</li><li> 对自己之前的认识分析过程自信点</li><li> 心平气和看淡一切，以平常心面对</li></ol><h2 id="五、经验积累（重点复盘阶段）"><a href="#五、经验积累（重点复盘阶段）" class="headerlink" title="五、经验积累（重点复盘阶段）"></a>五、经验积累（重点复盘阶段）</h2><p>无论结果如何，一个理性的交易者都会有复盘<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="复盘，围棋术语，也称 “复局”，指对局完毕后，复演该盘棋的记录，以检查对局中招法的优劣与得失关键。">[1]</span></a></sup>阶段。无论赚不赚钱，你最后都是要有收获的，否则再多的实战都是没有意义的。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>所以一个理性的投资者应该具备以下条件：</p><ol><li> 学习能力、认清事物本质的（思考）能力</li><li> 获取信息的能力、对信息筛选分析的能力</li><li> 总结规律，运用规律展望未来的能力</li></ol><h1 id="最后的一点点建议"><a href="#最后的一点点建议" class="headerlink" title="最后的一点点建议"></a>最后的一点点建议</h1><p>不知道大家是否发现，其实投资对象也可以是自己，而且这个投资对象最稳，他不会跑路，他可能有许多闪光点,你是对他最了解最有把握的。</p><p>但是日常中我发现少有人投资自己。抛开自己是不是绩优股<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="绩优股就是业绩优良公司的股票。这里指才华横溢、天赋异禀的人">[2]</span></a></sup>不谈，不妨思考一下，是否是因为根本没给自己一个投资自己的机会呢。也许在某一领域，给自己砸了不少时间金钱后，发现自己其实是个因为没有资金照顾，才没表现出来的黑马股<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="黑马股是指价格可能脱离过去的价位而在短期内大幅上涨的股票。这里指之前默默无闻，在经过潜心努力后突然一鸣惊人的后起之秀。">[3]</span></a></sup>呢。</p><p>所以以投资自己为主线，投资他人为支线，应该是我认为最好的投资组合。</p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">复盘，围棋术语，也称 “复局”，指对局完毕后，复演该盘棋的记录，以检查对局中招法的优劣与得失关键。<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">绩优股就是业绩优良公司的股票。这里指才华横溢、天赋异禀的人<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">黑马股是指价格可能脱离过去的价位而在短期内大幅上涨的股票。这里指之前默默无闻，在经过潜心努力后突然一鸣惊人的后起之秀。<a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> 基础原理(认识层面) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>致读者</title>
      <link href="posts/2772/"/>
      <url>posts/2772/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>感谢浏览本站，本站主要分享技术内容，偶尔写点生活趣事。</p><p>本文主要面向读者，在肯定读者的表达权的同时，希望读者能遵守发言的原则</p><p>本人学识有限，这篇原则的明确还望各位共同参与完善</p><hr><h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><p>以下是提出原则的由来，如不耐烦，可直接跳至原则</p><h2 id="建站目的"><a href="#建站目的" class="headerlink" title="建站目的"></a>建站目的</h2><p>对于建站这个想法我由来已久，最初只是享受学习建站的过程，算是个兴趣吧。不过随着网站的逐步成型，我现在的兴趣转移到了写作上，所以我建了这个博客，专门用于写作。</p><h2 id="写作的目的"><a href="#写作的目的" class="headerlink" title="写作的目的"></a>写作的目的</h2><p>既然决定写作了，就得好好思考下自己的写作方向。想的是打算多写些高质量的文章，同样面向高质量的读者。</p><p>最终理想的效果是，从读者角度来看，读者在我的文中可以收获知识和技能（把知识转化成财富的能力）；从作者角度来看，我能从读者的反馈中补充到新的知识，还有积累到影响力（人气吧，也是一种可以转化成财富的能力）。所以在我眼里，作者跟读者的关系属于合作共赢的关系，大家共同收获知识和财富。</p><p>想法是好的，不过如何实现呢（实现目的的方法）？这就需要作者和读者之间的默契了。这里的默契更确切的说法应该叫原则。只有各自遵守各自的原则，才能实现共赢。</p><p>要建立这个原则（方法），还不能急，还得先认清什么是写作。</p><h2 id="写作的本质"><a href="#写作的本质" class="headerlink" title="写作的本质"></a>写作的本质</h2><p>用一句凝练的话讲，写作就是沟通作者跟读者的桥梁。它是一种（<strong>双向</strong>的）沟通方式，这就意味着作者不能只顾自己写，还要看读者的想法。只顾自己写，而不给读者表达的权力，那就成了文字广播。这也是我为什么在本站加上评论这个功能的原因，所以希望我的读者能利用起这个最基本的权力。</p><p>沟通方式有很多，写作以文字作为信息的载体，具有许多文字上的特质。它具体表现为突出细节、有象征意义、富有创造性。这就意味着写作能更突出重点，更具创造力。</p><p>以上这两段话就是我对写作本质的理解，第一段讲的是它的共性，第二段讲的是它的特性，二者共同组成了较为完整的写作这一概念。对于写作本质的介绍就到这吧,下面就从本质出发建立指导方法，也就是明确原则。</p><hr><h1 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h1><p>以下就是原则的内容，如不评论，可以不遵守以下发言规则。当然这些规则都建立在<strong>言论自由</strong>的大前提下。</p><h2 id="读者权益"><a href="#读者权益" class="headerlink" title="读者权益"></a>读者权益</h2><ol><li> 读者享有言论自由<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="言论自由不代表可以随意发言。自由是相对的，你有别人也有。自由的前提是承认他人自由，被尊重的同时也要尊重他人。">[1]</span></a></sup>的权利</li><li> 读者有权删除，导出个人在本站产生的所有数据</li><li> 读者有权命令我删除侵犯其个人权利的恶意评论</li><li> 未完待续…</li></ol><h2 id="发言规则"><a href="#发言规则" class="headerlink" title="发言规则"></a>发言规则</h2><ol><li> 不允许发敏感内容<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="主要指的是政治言论和成人内容，因为我怕被请去喝茶，所以这方面的内容请到专门的地方分享吧。">[2]</span></a></sup></li><li> 不允许发侮辱性言论，即使出于正义的目的</li><li> 不允许在我的文章底下发跟文章内容不相关的广告</li><li> 不允许发未经作者授权的内容（转发可以）</li><li> 未完待续…</li></ol><hr><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>以上内容主要是从读者角度出发的，但它同时对读者和作者做出了约定。实际上包含了读者跟读者，读者跟作者之间的默契。所以我就不写作者方面的细则了，但是对于读者的权益，<strong>我保证做到能给的都给</strong>。</p><p>以上哪里有欠妥之处，望各位在评论底下指正</p><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">言论自由不代表可以随意发言。自由是相对的，你有别人也有。自由的前提是承认他人自由，被尊重的同时也要尊重他人。<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">主要指的是政治言论和成人内容，因为我怕被请去喝茶，所以这方面的内容请到专门的地方分享吧。<a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>环青海湖骑行第六天</title>
      <link href="posts/14964/"/>
      <url>posts/14964/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="最后一天"><a href="#最后一天" class="headerlink" title="最后一天"></a>最后一天</h1><p>真快，到最后一天了，目的地是最初的起点-西海镇。今天最大的挑战是5公里的缓上坡。</p><p>在国道上骑行总是遇到鬼天气，今天又是阴雨天赶路的一天，配合上坡路真的够折磨的，一路上都没怎么拍照。</p><p>离开了哈尔盖，就真的离开了刚察，路边也看不到大片的油菜花了。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1E6Ts.md.jpg" alt="alt离开刚察"></p><h1 id="甘子河"><a href="#甘子河" class="headerlink" title="甘子河"></a>甘子河</h1><p>中途经过了甘子河乡，门口雕像很有牌面，像在欢迎旅人。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1E779.md.jpg" alt="alt甘子河乡"></p><h1 id="绝望坡"><a href="#绝望坡" class="headerlink" title="绝望坡"></a>绝望坡</h1><p>不知不觉中居然登上绝望坡了，说起来这一路好像确实下来推了有好长一段路的车，但没想到5公里长的缓上坡就这样骑完了。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1EXp6.md.jpg" alt="alt绝望坡"></p><p>看到这五彩经幡，感觉自己已经快完成今天的目标了，接下来的体验更是印证了我的感觉。</p><p>这是极为离谱的长下坡，有多离谱呢？事后，我的衣服后面是黑色的一条印记，要知道我的车是有挡泥板的。</p><p>印象中这个下坡经过了两个小山坡，就这样滑了有好几公里，太爽了。下完坡后就看到了西海镇，第一天跟鸿升一起试车的路也逐渐让我熟悉了起来，没错，我们的终点要到了。</p><h1 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h1><p>真快，下午1点半大家就回到了5天前的起点，这一路共计360公里，用了4天半时间骑完了。</p><p>有点懵，真的不可思议，就骑完了。值得高兴的是，大伙都安全骑到了，而且就我没扎过胎😄。今日的骑行记录如下：</p><p><img src="https://s3.ax1x.com/2020/12/17/rGaRr8.md.jpg" alt="alt记录"></p><p>再见了，青海湖！再见了，这里的人！再见了，这一路的骑友！</p>]]></content>
      
      
      <categories>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 骑行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环青海湖骑行第五天</title>
      <link href="posts/29293/"/>
      <url>posts/29293/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="行程安排"><a href="#行程安排" class="headerlink" title="行程安排"></a>行程安排</h1><p>今日的行程很轻松，只有50多公里，不过上坡路挺多。从泉吉出发至哈尔盖，途径刚察，一路过来难得一遇的县城，心中对此充满了期待。</p><h1 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h1><p>从环湖西路骑到国道315后天气又变得奇怪了起来，一早看到灰蒙蒙的天还是有点担心。吃饭前，阿潘同学发现他的车胎没气了。饭后补完胎，我们出发了。</p><p>沿路的生态-健硕的草地，看不到青海湖了，铁路依旧。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1m39I.md.jpg" alt="alt铁路"></p><p>不知骑了多久，路上出现了大片的油菜花，如同骑在花海中。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1Eywj.md.jpg" alt="alt油菜花1"></p><p>就是在这花海中，远远的可以望见刚察了，结果鸿升的车又扎胎了，不过这次我正好在旁边，工具包也在。不过这破洞还真够难找的，折腾了半天我们决定先打点气去县城里补了。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1EB6S.md.jpg" alt="alt油菜花2"></p><h1 id="鱼鸟天堂，藏城刚察"><a href="#鱼鸟天堂，藏城刚察" class="headerlink" title="鱼鸟天堂，藏城刚察"></a>鱼鸟天堂，藏城刚察</h1><p>到刚察了，好快。一个草原城市的面貌逐渐清晰了起来。还有个别名：高原滨海藏城。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1E0l8.md.jpg" alt="alt刚察1"></p><p>进城了，神秘的藏族文化扑面而来。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1V5Ct.md.jpg" alt="alt刚察2"></p><center>休息椅</center><hr><p><img src="https://s3.ax1x.com/2020/12/16/r1VxCq.md.jpg" alt="alt刚察3"></p><center>三种文字的指示牌</center><hr><p><img src="https://s3.ax1x.com/2020/12/16/r1EwSf.md.jpg" alt="alt刚察4"></p><center>藏城刚察</center><hr><p>在藏城吃过饭补完胎后，我们又出发了。</p><h1 id="神奇的塔"><a href="#神奇的塔" class="headerlink" title="神奇的塔"></a>神奇的塔</h1><p>远远的一双眼睛很迷人，走近一看，胸口贴着“党的恩情深似海”。</p><blockquote><p>  想到一句话：Big brother is watching you</p></blockquote><p><img src="https://s3.ax1x.com/2020/12/16/r1VVc8.md.jpg" alt="alt刚察5"><br><img src="https://s3.ax1x.com/2020/12/16/r1Vu7j.md.jpg" alt="alt刚察6"></p><h1 id="再见，藏城"><a href="#再见，藏城" class="headerlink" title="再见，藏城"></a>再见，藏城</h1><p>城边公园，山坡绿地上摆着一串神秘的藏文。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1ET0J.md.jpg" alt="alt刚察7"></p><p>站在县城门口的两座塔像是在守护这座城市。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1Eom4.md.jpg" alt="alt刚察8"></p><p>城边的山顶上挂满了五色彩旗。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1EhlT.md.jpg" alt="alt刚察9"></p><p>出城后又是一路的油菜。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1E46U.md.jpg" alt="alt油菜"></p><h1 id="哈尔盖"><a href="#哈尔盖" class="headerlink" title="哈尔盖"></a>哈尔盖</h1><p>很快，到了我们今天的目的地，哈尔盖。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1EfpV.md.jpg" alt="alt哈尔盖"></p><h1 id="熬茶"><a href="#熬茶" class="headerlink" title="熬茶"></a>熬茶</h1><p>今晚吃饭的时候，我们又喝到了当地人免费提供的茶，喝起来有点咸苦，挺奇怪的味道。借着好奇心询问店家，这是什么茶。</p><blockquote><p>  答：nao茶</p></blockquote><p>这是非常有特色的，值得体验的奇怪的茶，当时有点勉强的在喝，现在竟有点怀念。</p><h1 id="记录总结"><a href="#记录总结" class="headerlink" title="记录总结"></a>记录总结</h1><p>今天一路多云，没下雨挺不错的，就是上坡路有点多，总计骑行53公里。</p><p><img src="https://s3.ax1x.com/2020/12/16/r1Eqt1.md.jpg" alt="alt记录"></p>]]></content>
      
      
      <categories>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 骑行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环青海湖骑行第四天</title>
      <link href="posts/45267/"/>
      <url>posts/45267/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="行程安排"><a href="#行程安排" class="headerlink" title="行程安排"></a>行程安排</h1><p>今日的行程是非常值得期待的，黑马河日出、环湖西路、石乃亥、鸟岛、青藏铁路、泉吉乡。当然最值得期待的还是一个晴好的天气了，让我们可以看到最美的风景。</p><h1 id="黑马河日出"><a href="#黑马河日出" class="headerlink" title="黑马河日出"></a>黑马河日出</h1><p>为了看黑马河日出，我跟鸿升今早6点多就起来了。即使是七月，高原的晚间和早晨依旧寒冷，所以我们裹着旅馆的毯子就出发了。</p><p>出门的第一感觉是真的冷，整得我走路都一跳一跳的。然后是感觉清晨空气挺清新的，尤其是往湖边走去的时候，有种走在朝圣之路的感觉。而我跟鸿升两人又披着毯子，像极了藏传佛教里的喇嘛，我当时这样想。</p><p>看日出的人还挺多的，身边经过一辆又一辆私家车。甚至还遇到了昨天跟我们一起拼车的朋友，他们从后面骑车追上的我俩，我们互相打过招呼，他们就先骑过去了。像我俩这样走过去的还真就眼前的一个女人。</p><p>到湖边的时候，天已经亮的足以看清前方的路了，不过太阳尚未露头。但此时的湖景就已将我迷住。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZNYCR.md.jpg" alt="alt晨湖1"><br><img src="https://s3.ax1x.com/2020/12/12/rZNG59.md.jpg" alt="alt晨湖2"></p><p>当走到观日处早已人山人海，我倒是真没想到居然能在这里看到这么多的人，难怪刚走过来的时候还看到有人在这边搭帐篷露营的。但这边晚上是真的冷，更别说在湖边露营了，为了看日出值得这样疯狂么？</p><p>下一刻，在看到太阳升起的那刻我马上明白了，确实值得。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZt6XT.md.jpg" alt="alt日出1"><br><img src="https://s3.ax1x.com/2020/12/12/rZaRHS.md.jpg" alt="alt日出2"><br><img src="https://s3.ax1x.com/2020/12/12/rZtR74.md.jpg" alt="alt日出3"><br><img src="https://s3.ax1x.com/2020/12/12/rZtrpq.md.jpg" alt="alt日出4"><br><img src="https://s3.ax1x.com/2020/12/12/rZNS3t.jpg" alt="alt日出5"></p><p>甚至开始后悔自己没有起得更早，早点过来站个位置，这样可以像别人一样支个三脚架，拍个绝美日出的视频。也后悔没有叫上阿潘和他同学，虽然昨晚他俩就决定睡懒觉了，但是这日出真的值得把他们从床上拉起来。</p><p>看完日出，天已透亮，离开前又拍了几张湖边的文化建筑。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZNeCn.md.jpg" alt="alt"><br><img src="https://s3.ax1x.com/2020/12/12/rZNPu8.md.jpg" alt="alt"></p><p>真的感谢上天，没有下雨，黑马河日出很壮观，我看到了！</p><h1 id="薰衣草地"><a href="#薰衣草地" class="headerlink" title="薰衣草地"></a>薰衣草地</h1><p>天亮了，我们也吃过饭出发了。今天的天气特别好，风景也很美，出发没多久就看到了一片薰衣草地。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZt4hR.md.jpg" alt="alt薰衣草地1"></p><p><img src="https://s3.ax1x.com/2020/12/12/rZNFHg.md.jpg" alt="alt薰衣草地2"></p><p>顺便打卡拍照，纪念一下。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZNUv6.md.jpg" alt="alt合照1"></p><p><img src="https://s3.ax1x.com/2020/12/12/rZNt81.md.jpg" alt="alt合照2"></p><blockquote><p>小插曲：就在阿潘同学给我跟鸿升拍完合照不久后，他的车也扎胎了。好在才出黑马河不远，阿潘陪着他回去补了个胎又出发了。</p></blockquote><h1 id="环湖西路"><a href="#环湖西路" class="headerlink" title="环湖西路"></a>环湖西路</h1><p>这是跟青海湖贴的最近的一条路，也是最美的一条路。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZNAEQ.md.jpg" alt="alt湖1"><br><img src="https://s3.ax1x.com/2020/12/12/rZNENj.md.jpg" alt="alt湖2"><br><img src="https://s3.ax1x.com/2020/12/12/rZtv4A.md.jpg" alt="alt湖3"><br><img src="https://s3.ax1x.com/2020/12/12/rZNpgP.md.jpg" alt="alt湖4"></p><p>真的太美了，我还拍了张全景图。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZtXAH.md.jpg" alt="alt全景"></p><p>从鸿升那里偷来的这张图尤其美。</p><p><img src="https://s3.ax1x.com/2020/12/13/reysbR.md.jpg" alt="alt美"></p><p>更美的是这一路相互加油的骑友，拼过车的两位朋友，还有那位老先生，我们互相加油，一同走在朝圣的路上，这种感觉极好。</p><h1 id="石乃亥"><a href="#石乃亥" class="headerlink" title="石乃亥"></a>石乃亥</h1><p>在爬过一个极陡的坡后，石乃亥就到了，有点意想不到的快。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZtjNd.md.jpg" alt="alt石乃亥"></p><p>在这里我跟鸿升等了下阿潘跟他同学，顺便休息一下吃了个瓜，整顿完后就一同出发去鸟岛了。</p><p>这段路很平直，车也很少。在人像大师鸿升的提议下，我们各自留下了值得回忆的照片。</p><p><img src="https://s3.ax1x.com/2020/12/14/rnuXTI.md.jpg" alt="alt留念"></p><h1 id="鸟岛"><a href="#鸟岛" class="headerlink" title="鸟岛"></a>鸟岛</h1><p>通往鸟岛的路很好，这段路不但平缓没什么上坡，而且生态很好。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZtLHe.md.jpg" alt="alt鸟岛"></p><p>在鸟岛吃过午饭后，鸿升出发去鸟岛景区了，而我们往今天的目标泉吉乡出发了。</p><p>路上看到了只牦牛，下车想近距离拍张照，一下车牦牛似乎很不高兴的往前走了，当时有点害怕。然后我就继续骑车了，追上这头牛的时候跟它对视了一眼，我惊了，那是愤怒的眼神，之后背后的一声吼声更是加剧了我内心的恐惧。回头瞟了眼，确认它没冲过上来拱我就放心了。</p><blockquote><p>对牦牛憨憨的印象一扫而空，为了骑行安全我后来没再下车看过牦牛。</p></blockquote><p><img src="https://s3.ax1x.com/2020/12/12/rZtTc6.md.jpg" alt="alt牦牛"></p><p>骑了挺久，天气突然有变，我突然意识到让鸿升一个人去鸟岛景区是多么不明智的决定了。因为他骑的是公路车放不了驼包，所以他的雨具都放在我这了。</p><p>往回骑了，幸运的是没回头多久就遇到了鸿升。没想到的是他也同样遇到了一头暴躁牦牛，在他从牦牛身边经过时差点被顶到。我当时还以为鸿升遇到的是跟我同一头牦牛，结果是鸟岛景区里的另一头。看来牦牛还是不要太接近的好。</p><h1 id="青藏铁路"><a href="#青藏铁路" class="headerlink" title="青藏铁路"></a>青藏铁路</h1><p>在骑上一座高架桥后终于看到了青藏铁路，守了一会儿就等到了火车。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZtbnO.md.jpg" alt="alt青藏铁路1"><br><img src="https://s3.ax1x.com/2020/12/12/rZto1x.md.jpg" alt="alt青藏铁路2"><br><img src="https://s3.ax1x.com/2020/12/12/rZt7jK.md.jpg" alt="alt青藏铁路3"><br><img src="https://s3.ax1x.com/2020/12/12/rZtI91.md.jpg" alt="alt青藏铁路4"></p><h1 id="泉吉乡"><a href="#泉吉乡" class="headerlink" title="泉吉乡"></a>泉吉乡</h1><p>看过铁路后，天又变灰了，万幸的是在下雨前我们成功赶到了今天的目的地-泉吉。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZtfAJ.md.jpg" alt="alt泉吉乡"></p><h1 id="总结记录"><a href="#总结记录" class="headerlink" title="总结记录"></a>总结记录</h1><p>今天一路体验都很棒，从黑马河到泉吉共计骑行了91公里，但是并没有想象中的那么累，所以天气好的话一天还是能骑挺远的。</p><p><img src="https://s3.ax1x.com/2020/12/15/rMg17F.md.jpg" alt="altrecord1"><br><img src="https://s3.ax1x.com/2020/12/15/rMgN11.md.jpg" alt="altrecord2"></p>]]></content>
      
      
      <categories>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 骑行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环青海湖骑行第三天</title>
      <link href="posts/56850/"/>
      <url>posts/56850/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="启程"><a href="#启程" class="headerlink" title="启程"></a>启程</h1><p>今天的目标是上午到黑马河，下午坐车去看茶卡盐湖。</p><p>经历昨天下午的恶劣天气后，今早我们认真准备了雨具，简单地吃过早饭后就出发了。不知道是不是因为昨天下午恶劣天气的影响，今天路上骑行的人少了不少。</p><p>昨天就发现这边草地环境不错，上面有不少小花，今天拍了个照。</p><p><img src="https://s3.ax1x.com/2020/12/10/riK5Ps.md.jpg" alt="alt小花"></p><h1 id="恶劣天气"><a href="#恶劣天气" class="headerlink" title="恶劣天气"></a>恶劣天气</h1><p>上午在前往黑马河的路上，我们一行人受尽了磨难，在这50公里的路上下了三次雨，一次冰雹，一次大风，出了三次太阳。</p><p>说下我的感受吧，那就是被大雨打湿后，风吹得我瑟瑟发抖又被吹干晒干；然后又被打湿，又被吹干晒干。</p><blockquote><p>  就是这天才发现防晒霜根本不顶用，一波雨就把用心涂抹的防晒霜淋得一干二净，我后来就一直戴着头巾。</p></blockquote><p>冰雹更是离谱，我们直接弃车，几个人靠着一辆路边的越野车才得以幸免。</p><p>最恐怖的是大风，完全蹬不动车，当我决定弃车的时候，发现车根本立不住，要知道我的山地车还挂着驼包(里面装满了行李)。幸运的是，后来我推着车发现了一个公厕，在那里避的风。</p><p>不幸的是，在大风中阿潘的车爆胎了。然而补胎工具在我身上，我手机还静音了。当我追上阿潘的时候，还无奈的发现我们三个都不会补胎。幸好鸿升联系了一位司机，好心司机把阿潘跟他同学先带去目的地了。</p><p>因为恶劣天气影响，这一路就只拍了没几张照片。</p><p><img src="https://s3.ax1x.com/2020/12/10/riKo2q.md.jpg" alt="alt这天这路"></p><center>这天这路</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riVpBd.md.jpg" alt="alt湖边牧场"></p><center>湖边牧场</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riKfaQ.md.jpg" alt="alt湖边草地"></p><center>湖边草地</center><hr><p>大风过后，我的潜能被彻底激发了，害怕再不快点骑完这段路，会有什么更离谱的恶劣天气在等着我。</p><p>一波血性冲刺后，赶上了正在等我的鸿升。然后我们又一起出发了。在一个下坡的时候鸿升的车也爆胎了，然而我依旧处于无脑冲刺中，没有注意到鸿升爆胎的消息。</p><h1 id="黑马河"><a href="#黑马河" class="headerlink" title="黑马河"></a>黑马河</h1><p>直到我冲到黑马河，掏出手机拍照时才发现问题。</p><p><img src="https://s3.ax1x.com/2020/12/10/riK2qS.md.jpg" alt="alt黑马河"></p><p>拍下路标，确认了消息，马上扭头去救鸿升了。很快就撞上了推车过来的鸿升。尴尬的是，补胎工具刚给阿潘了，然后我们也坐上了车。</p><p>总结这两波直接把队友送走的失误操作后，我的手机再没静音过，补胎工具包也一直放在我这不动了。</p><p>好心司机是当地人，开着一家旅馆。把我们送到旅馆后，还帮我们补了胎。就在这里遇到了同是517俱乐部的三位骑友，其中两位是跟我们年纪一样的大学生，另一位是和蔼的老先生。下午去盐湖就是跟这两位大学生骑友一起拼的车，司机当然还是好心司机。</p><p>简单的吃过午饭后我们就出发了。前往盐湖的路上，心情逐渐舒畅，慢慢忘记了上午的磨难。</p><p>盐湖在柴达木盆地中，不过在进入柴达木盆地前，一路都是高山，有不少悬崖峭壁。跟我们环湖骑行所看到的景色截然不同。</p><p>进入柴达木盆地后，视野突然开阔，眼前出现了大片的风车。</p><h1 id="茶卡盐湖"><a href="#茶卡盐湖" class="headerlink" title="茶卡盐湖"></a>茶卡盐湖</h1><p>不久，就到了盐湖。其实盐湖上个暑假我就来过了，那时候去的还是老景区，这次换新的景区了-天空壹号。拍了不少照片：</p><p><img src="https://s3.ax1x.com/2020/12/10/riEvcD.md.jpg" alt="alt小心火车1"><br><img src="https://s3.ax1x.com/2020/12/10/riKHMV.md.jpg" alt="alt小心火车2"><br><img src="https://s3.ax1x.com/2020/12/10/riKjIJ.md.jpg" alt="alt盐湖上的火车"><br><img src="https://s3.ax1x.com/2020/12/13/reyW8O.md.jpg" alt="alt盐湖火车"></p><center>盐湖上的火车</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riKxi9.md.jpg" alt="alt风力发电机组"></p><center>风力发电机组</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riKgr8.md.jpg" alt="alt五彩的湖"></p><center>五彩的湖</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riKqqU.md.jpg" alt="alt盐湖一览"></p><center>盐湖一览</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riKWVg.md.jpg" alt="alt悍匪"></p><center>悍匪</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riKXa4.md.jpg" alt="alt细看湖水"></p><center>细看湖水</center><hr><p>真正看到盐湖也就这样吧，这是我们大家的感受。对于我之前去过老景区的人来说，更是觉得这次的体验确实不大理想，有点过于商业化了。不过毕竟是免票游玩(浙江籍免票)，还是希望老乡的新景区能有更好的发展吧。</p><h1 id="记录总结"><a href="#记录总结" class="headerlink" title="记录总结"></a>记录总结</h1><p>今天从江西沟至黑马河，总计骑行50.1公里，虽然四个人整整齐齐都坐车了，但是能经历的都经历也是一件好事吧(指爆胎坐车还有多变的天气)。尤其是这怪天气，当晚洗脸就发现鼻子蜕皮了，疼的很。</p><p><img src="https://s3.ax1x.com/2020/12/10/riKh5j.jpg" alt="alt记录"></p><p>最后推荐一个挺有特色的酸奶-慕拉酸奶，当晚便利店发现的，味道不错。</p><p><img src="https://s3.ax1x.com/2020/12/12/rZ8HoR.md.jpg" alt="alt酸奶"></p>]]></content>
      
      
      <categories>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 骑行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环青海湖骑行第二天</title>
      <link href="posts/53867/"/>
      <url>posts/53867/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h1><p>第二天，环青海湖的骑行正式开始了。计划这天从西海镇到江西沟，大概100多公里，中午湖东种羊场吃饭。</p><p>没有太多的思考，我们包含着热情上路了，发现跟我们一样今天出发的人还挺多的，此时的我们并没有意识到接下来的挑战有多离谱。甚至我还被一路的油菜花吸引了，还没真正看到青海湖，我已经陶醉在花海中。发出不虚此行的感叹。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEDXQ.md.jpg" alt="alt油菜"></p><p>实际上我们正在经历漫长的爬坡阶段，但是周围的景色麻痹了我的神经，当我实在踏不动踏板的时候，我明智地决定推车了。当终于把车推上第一个小山头的时候，一群人早已站在这里休息，欣赏着对面山坡上的羊群。</p><p><img src="https://s3.ax1x.com/2020/12/10/rF0uvT.md.jpg" alt="alt羊群"></p><p>没有做过多的停留我又出发了，因为让大家等我太久属实不好。毕竟这时候连青海湖塔楼(青海湖入口标志性建筑)都还没到。之后在机械地重复踩踏踏板中，热情都给我踏飞咯。</p><h1 id="青海湖塔楼"><a href="#青海湖塔楼" class="headerlink" title="青海湖塔楼"></a>青海湖塔楼</h1><p>幸运的是，不断的爬坡后终于在一次极为离谱的长下坡中，我体会到了单车速度40码的激情，也意识到了目标已经近在咫尺。一波斗志激发，眼前终于出现了塔楼。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEUtP.md.jpg" alt="alt塔楼"></p><p>经典打卡点，给自己也来了一张。当时内心老激动了，感谢摄影师鸿升和他的爱车。</p><h1 id="青海湖"><a href="#青海湖" class="headerlink" title="青海湖"></a>青海湖</h1><p>过了塔楼没多远的路，就看到青海湖了。在晴好的天气下，远远的看过去海天一线。就跟下图说的那样，青海湖，中国最美丽的湖泊。</p><p><img src="https://s3.ax1x.com/2020/12/10/riE3OH.md.jpg" alt="alt青海湖"></p><p>接下来又是长下坡，所以可想而知，我们当时爬了是有多长的坡。</p><p><img src="https://s3.ax1x.com/2020/12/10/rF0MKU.md.jpg" alt="alt长下坡"></p><p>进入青海湖后首先看到的是一片沙漠，挺神奇的，就在湖边上。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEQSO.md.jpg" alt="alt沙漠"></p><p>好奇心很快又被重复性的踩踏行为，踩在底下。</p><h1 id="湖东种羊场"><a href="#湖东种羊场" class="headerlink" title="湖东种羊场"></a>湖东种羊场</h1><p>不知骑行了多长的路，牛、马、羊开始多起来了，终于到种羊场了。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEKfK.md.jpg" alt="alt种羊场"></p><p>甚至还看到了牦牛，近距离拍了张照片。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEGmd.md.jpg" alt="alt牦牛"></p><p>到餐馆前一副奇怪的风景吸引了我，草地上孤零零的一棵树，这个场景有没有觉得挺美的。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEuY6.md.jpg" alt="alt孤零零的一棵树"></p><p>餐馆吃过饭，小憩了一会儿，我们又出发了。</p><p>虽然正是太阳最猛的时候，但此时在环湖东路上骑行尤其舒爽。从湖所在的方向吹来阵阵凉风，而我们正好下坡，只要负责把脸迎上去接风吹就完了。</p><p>此时望着前方，青海湖越来越近了。</p><p>骑到一处不少人下去观湖的地方，我也下车了。正好我们四个人都有下去观湖的想法，大伙鱼贯而下，一睹圣湖真容。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEJ0A.md.jpg" alt="alt近看青海湖"></p><p>当时天气不好，所以这个真容看上去可能比想象中差了点。</p><h1 id="国道109"><a href="#国道109" class="headerlink" title="国道109"></a>国道109</h1><p>从环湖东路骑到国道109后，噩梦开始了。天气已经不对了，下起了小雨，阿潘身体不适坐车帮我们先去订旅馆了。但我们还在前往二郎剑景区的路上。</p><p>到了二郎剑，从我们的视角(景区外)看二郎剑景区：</p><p><img src="https://s3.ax1x.com/2020/12/10/riEsmj.md.jpg" alt="alt二郎剑"></p><p>风景可能到此告个段落了，因为接下来就遇到糟糕的天气了-阵阵阴雨，还有漫长的缓上坡。</p><p>冷的可怕，当时鞋子已经完全湿透，脚冷。裤子也湿了大半，几乎沉重的蹬不动单车了。这段路上我几乎就是边推边蹬过来的，真的磨练一个人。</p><p>路上看到了一排白塔，终点不远了，我这样安慰自己。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEaff.md.jpg" alt="alt白塔"></p><h1 id="江西沟"><a href="#江西沟" class="headerlink" title="江西沟"></a>江西沟</h1><p>终于到了，如同长征胜利完成一般。</p><p><img src="https://s3.ax1x.com/2020/12/10/riE01S.md.jpg" alt="alt江西沟"></p><h1 id="记录总结"><a href="#记录总结" class="headerlink" title="记录总结"></a>记录总结</h1><p>一行四人都到位了，没有一人落下，完美。只是阿潘有点发烧，担心他接下来的行程是否还能坚持走完。</p><h2 id="行程数据"><a href="#行程数据" class="headerlink" title="行程数据"></a>行程数据</h2><p>因为没有一开始就记录数据，所以我只知道，从青海湖入口塔楼到江西沟，我们骑了有84.4公里。参考鸿升的记录，这天骑了有100公里。</p><p><img src="https://s3.ax1x.com/2020/12/10/riEYTI.jpg" alt="alt记录"></p><h2 id="身边的悲剧"><a href="#身边的悲剧" class="headerlink" title="身边的悲剧"></a>身边的悲剧</h2><blockquote><p>正好发生在我们住宿的旅馆，发生在一位陌生骑友身上。有点难过。</p></blockquote><p>我所听闻的事情是这样的，这位骑友骑得挺快的，先到了江西沟，定了这个旅馆。然而跟他同行的朋友还在后面所以他又骑回去了。见面后得知他们放弃了骑到江西沟的念头，并在二郎剑定了旅馆后。他又骑回江西沟退钱去了，正好在旅馆前，从车上摔下来把膝盖骨摔坏了。</p><p>我的所见，在国道109上骑行的时候就听到了救护车的声音，当时不以为意，现在回想这身边发生的事不免害怕。</p><p>出门在外还是安全第一，希望这位骑友早日康复。这件事后我一路都很小心。</p>]]></content>
      
      
      <categories>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 骑行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环青海湖骑行第一天</title>
      <link href="posts/16913/"/>
      <url>posts/16913/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h1><p>关于环青海湖骑行的念头，要不是好朋友鸿升牵头，我是半点都不会想到的。而且看得出他准备了良久，说来惭愧我在西北上学，他大老远跑过来我应该好生招待的。结果我好像还没他了解青海哈哈哈哈。</p><blockquote><p>最搞笑的是：鸿升问我，七月青海天气怎么样冷不冷。我直接就是还好，白天穿个短袖刚刚好。😄好家伙，一路骑车下来就没短袖过。</p></blockquote><p>我们一行四个人，我、鸿升、大学室友阿潘还有他的初中同学。</p><h1 id="行程"><a href="#行程" class="headerlink" title="行程"></a>行程</h1><p>第一天，主要是准备阶段，我们一早从青海省城-西宁出发乘大巴车到西海镇。说是一早其实都9点多了吧，大巴到西海镇刚好中午。到客运中心后，骑行俱乐部有车接送，直接送到我们此行的真正起点-517骑行俱乐部，也是我们启程后的终点。现在后悔自己没有给它拍一张照片了，所以下图嫖自摄影师鸿升的朋友圈：</p><p><img src="https://s3.ax1x.com/2020/12/10/riAtRU.md.jpg" alt="alt517"></p><h2 id="初识原子城"><a href="#初识原子城" class="headerlink" title="初识原子城"></a>初识原子城</h2><p>哦对了，作为看惯钢筋混凝土的人，初到原子城<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="西海镇，也称中国原子城，最早没有城镇，只有一些牧民的定居点。因为科研人员在这里研制原子弹才诞生的小镇，所以也称原子城。">[1]</span></a></sup>会有很神奇的感受。</p><p>就是这里研究过核武器的历史，配合居住区每幢楼墙体上，带有政治色彩的宣传标语，仿佛把我带入了那个充满热血的红色时代。而原子城又坐落在大草原上，被广袤的草原环绕。然后当时正好下着雨，天空灰蒙蒙的。怎么说呢，热血的红色被静谧的绿色包裹，又被忧郁的灰色盖在底下，就是这么神奇的感受。</p><p>但实际上热血的红色仅仅是建筑、历史文化带给我的感受，相反镇上的人带给我的是草原的静谧。他们或许看上去表现的很冷淡，但实际上很热情。</p><blockquote><p>小故事：当时正好推着车去吃饭，因为车上放着行李挺重的，路人直接来帮我推了。</p></blockquote><p>这就是我眼中的西海小镇和小镇上的人，神奇美妙。</p><h2 id="原子纪念馆"><a href="#原子纪念馆" class="headerlink" title="原子纪念馆"></a>原子纪念馆</h2><p>租完单车，在酒店整顿完行李，正好雨也停了。我跟鸿升俩人便去试车了。先是去看了原子纪念馆，因为不能拍照，所以只有下面这个远景图。</p><p><img src="https://s3.ax1x.com/2020/12/10/riAJiV.md.jpg" alt="alt纪念馆"></p><h2 id="金银滩草原"><a href="#金银滩草原" class="headerlink" title="金银滩草原"></a>金银滩草原</h2><p>看完纪念馆，我俩就去看外面的金银滩草原了。一眼看上草原，两个字，喜欢。眼中只剩下蓝天、白云、绿草。</p><p><img src="https://s3.ax1x.com/2020/12/10/riAaM4.md.jpg" alt="alt金银滩草原"></p><center>金银滩草原</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riArIx.md.jpg" alt="alt空荡的公路"></p><center>空荡的公路</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riAYGT.md.jpg" alt="alt特色路标"></p><center>特色路标</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riA8I0.md.jpg" alt="alt牛羊"></p><center>牛羊</center><hr><p><img src="https://s3.ax1x.com/2020/12/10/riAdsJ.md.jpg" alt="alt五彩经幡"></p><center>五彩经幡</center><h1 id="吃食"><a href="#吃食" class="headerlink" title="吃食"></a>吃食</h1><p>第一感觉就是价格贵了一倍，东西种类还少了。</p><p>但是我们还是吃了两顿大餐。中午汉堡店吃鸡，晚上餐馆吃炒菜，吃到了牦牛肉，味道还行，但还是更喜欢吃惯了的普通牛肉。还有另一个当地特产黄蘑菇，挺不错的，我都推荐。</p><p>虽然喜欢美食，但是对美食的嗅觉我是向来都不灵敏的。所以我也就扬长避短不多介绍了。</p><h1 id="睡前"><a href="#睡前" class="headerlink" title="睡前"></a>睡前</h1><p>被鸿升逗笑了，在明天就要准备出行的激动的晚上，他在挑灯写英语作业。看得出这波是说走就走的骑行，被他的精神感动到了。</p><p>又有点回想起高中的岁月，好像我们当时就是这副样子的。但是我现在却不大认识自己了，不知道自己发生了什么。不过眼前的鸿升是本人没错了。</p><blockquote><p>有这种想法可能是因为太久没联系了吧，突然意识到自己的糟糕之处了，朋友还是得多联系的。</p></blockquote><h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">西海镇，也称中国原子城，最早没有城镇，只有一些牧民的定居点。因为科研人员在这里研制原子弹才诞生的小镇，所以也称原子城。<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 骑行 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
